// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSGM.Model.DbStorageStructure;

#nullable disable

namespace PSGM.Model.DbStorageStructure.Migrations
{
    [DbContext(typeof(DbStorageStructure_Context))]
    [Migration("20240901173207_InitialeCreate")]
    partial class InitialeCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("PSGM.Model.DbStorageStructure.DbStorageStructure_Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbStorageStructure.DbStorageStructure_ProjectStorage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("DatabaseConnectionString")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("DatabaseConnectionString");

                    b.Property<string>("DatabaseFilePath")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("DatabaseFilePath");

                    b.Property<uint>("DatabaseType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DatabaseType");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReadOnlyMode")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ReadOnlyMode");

                    b.Property<uint>("StorageClass")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StorageClass");

                    b.Property<string>("StorageFilePath")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageFilePath");

                    b.Property<string>("StorageS3AccessKey")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageS3AccessKey");

                    b.Property<string>("StorageS3BucketName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageS3BucketName");

                    b.Property<string>("StorageS3Endpoint")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageS3Endpoint");

                    b.Property<string>("StorageS3Region")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageS3Region");

                    b.Property<string>("StorageS3SecretKey")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageS3SecretKey");

                    b.Property<bool>("StorageS3Secure")
                        .HasMaxLength(1023)
                        .HasColumnType("INTEGER")
                        .HasColumnName("StorageS3Secure");

                    b.Property<uint>("StorageTier")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StorageTier");

                    b.Property<uint>("StorageType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StorageType");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("Url");

                    b.Property<string>("UrlPublic")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("UrlPublic");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectParameterStorage");
                });

            modelBuilder.Entity("PSGM.Model.DbStorageStructure.DbStorageStructure_ProjectStorage_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectParameterStorage_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorageStructure.DbStorageStructure_Project_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("Project_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorageStructure.DbStorageStructure_ProjectStorage", b =>
                {
                    b.HasOne("PSGM.Model.DbStorageStructure.DbStorageStructure_Project", "Project")
                        .WithMany("Storage")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbStorageStructure.DbStorageStructure_Project", b =>
                {
                    b.Navigation("Storage");
                });
#pragma warning restore 612, 618
        }
    }
}
