// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSGM.Model.DbStorage;

#nullable disable

namespace PSGM.Model.DbStorage.Migrations
{
    [DbContext(typeof(DbStorage_Context))]
    [Migration("20240911155135_InitialeCreate")]
    partial class InitialeCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileAuthorization_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileAuthorization_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileAuthorization_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileAuthorization_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileMetadataId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileMetadataId");

                    b.ToTable("FileMetadataAuthorization_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileMetadataId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileMetadataId");

                    b.ToTable("FileMetadataAuthorization_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileMetadataAuthorization_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileMetadataAuthorization_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileMetadataId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileMetadataId");

                    b.ToTable("FilMetadataNotification_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileMetadataId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileMetadataId");

                    b.ToTable("FileMetadataNotification_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileMetadataNotification_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileMetadataNotification_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileNotification_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileNotification_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileNotification_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileNotification_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("RootDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("RootDirectoryId");

                    b.ToTable("RootDirectoryAuthorization_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("RootDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("RootDirectoryId");

                    b.ToTable("RootDirectoryAuthorization_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("RootDirectoryAuthorization_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("RootDirectoryAuthorization_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("RootDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("RootDirectoryId");

                    b.ToTable("RootDirectoryNotification_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("RootDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("RootDirectoryId");

                    b.ToTable("RootDirectoryNotification_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("RootDirectoryNotification_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("RootDirectoryNotification_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("SubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("SubDirectoryId");

                    b.ToTable("SubDirectoryAuthorization_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("SubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("SubDirectoryId");

                    b.ToTable("SubDirectoryAuthorization_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("SubDirectoryAuthorization_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("SubDirectoryAuthorization_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("SubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("SubDirectoryId");

                    b.ToTable("SubDirectoryNotification_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("SubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("SubDirectoryId");

                    b.ToTable("SubDirectoryNotification_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("SubDirectoryNotification_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("SubDirectoryNotification_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("BackupsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("BackupsExtString");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid>("DeviceIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceIdExt");

                    b.Property<string>("ExtId1")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId1");

                    b.Property<string>("ExtId10")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId10");

                    b.Property<string>("ExtId2")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId2");

                    b.Property<string>("ExtId3")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId3");

                    b.Property<string>("ExtId4")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId4");

                    b.Property<string>("ExtId5")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId5");

                    b.Property<string>("ExtId6")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId6");

                    b.Property<string>("ExtId7")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId7");

                    b.Property<string>("ExtId8")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId8");

                    b.Property<string>("ExtId9")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ExtId9");

                    b.Property<string>("JobsIdExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("JobsIdExtString");

                    b.Property<string>("LastModificationChangesAutoFill")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChangesAutoFill");

                    b.Property<Guid>("MachineIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("MachineIdExt");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<uint>("ObjectExtension")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ObjectExtension");

                    b.Property<string>("ObjectMetadataString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("ObjectMetadataString");

                    b.Property<long>("ObjectSize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ObjectSize");

                    b.Property<string>("RawFileIdsString")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("RawFileIdsString");

                    b.Property<Guid?>("RootDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageObjectName")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageObjectName");

                    b.Property<string>("StorageObjectUrl")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageObjectUrl");

                    b.Property<string>("StorageObjectUrlPublic")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT")
                        .HasColumnName("StorageObjectUrlPublic");

                    b.Property<Guid?>("SubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("TEXT")
                        .HasColumnName("Suffix");

                    b.Property<string>("WorkflowItemsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowItemExtString");

                    b.HasKey("Id");

                    b.HasIndex("RootDirectoryId");

                    b.HasIndex("SubDirectoryId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_FileMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastModificationChangesAutoFill")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChangesAutoFill");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Metadata");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileMetadata");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_FileMetadata_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("FileMetadata_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_File_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("File_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_QrCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastModificationChangesAutoFill")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChangesAutoFill");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("QrCode");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_QrCode_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("QrCode_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_RootDirectory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("BackupIdsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("BackupIdsExtString");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<long>("DirectorySize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DirectorySize");

                    b.Property<string>("JobIdsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("JobIdsExtString");

                    b.Property<string>("LastModificationChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChanges");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<long>("Objects")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Objects");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("TEXT")
                        .HasColumnName("Suffix");

                    b.Property<string>("WorkflowItemIdsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowItemIdsExtString");

                    b.HasKey("Id");

                    b.ToTable("RootDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_RootDirectory_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("RootDirectory_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_SubDirectory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("BackupsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("BackupsExtString");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<long>("DirectorySize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DirectorySize");

                    b.Property<bool>("DocumentType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DocumentType");

                    b.Property<string>("JobsIdExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("JobsIdExtString");

                    b.Property<string>("LastModificationChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChanges");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Locked");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<long>("Objects")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Objects");

                    b.Property<Guid?>("ParentSubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RootDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("TEXT")
                        .HasColumnName("Suffix");

                    b.Property<string>("WorkflowItemsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowItemExtString");

                    b.HasKey("Id");

                    b.HasIndex("ParentSubDirectoryId");

                    b.HasIndex("RootDirectoryId");

                    b.ToTable("SubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_SubDirectory_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("SubDirectory_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_File", "File")
                        .WithMany("AuthorizationUsers")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_File", "File")
                        .WithMany("AuthorizationUserGroups")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_FileMetadata", "FileMetadata")
                        .WithMany("AuthorizationUsers")
                        .HasForeignKey("FileMetadataId");

                    b.Navigation("FileMetadata");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_FileMetadata", "FileMetadata")
                        .WithMany("AuthorizationUserGroups")
                        .HasForeignKey("FileMetadataId");

                    b.Navigation("FileMetadata");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_FileMetadata", "FileMetadata")
                        .WithMany("NotificationUsers")
                        .HasForeignKey("FileMetadataId");

                    b.Navigation("FileMetadata");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileMetadataNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_FileMetadata", "FileMetadata")
                        .WithMany("NotificationUserGroups")
                        .HasForeignKey("FileMetadataId");

                    b.Navigation("FileMetadata");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_File", "File")
                        .WithMany("NotificationUsers")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_FileNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_File", "File")
                        .WithMany("NotificationUserGroups")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_RootDirectory", "RootDirectory")
                        .WithMany("AuthorizationUser")
                        .HasForeignKey("RootDirectoryId");

                    b.Navigation("RootDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_RootDirectory", "RootDirectory")
                        .WithMany("AuthorizationUserGroup")
                        .HasForeignKey("RootDirectoryId");

                    b.Navigation("RootDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_RootDirectory", "RootDirectory")
                        .WithMany("NotificationUser")
                        .HasForeignKey("RootDirectoryId");

                    b.Navigation("RootDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_RootDirectoryNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_RootDirectory", "RootDirectory")
                        .WithMany("NotificationUserGroup")
                        .HasForeignKey("RootDirectoryId");

                    b.Navigation("RootDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_SubDirectory", "SubDirectory")
                        .WithMany("AuthorizationUser")
                        .HasForeignKey("SubDirectoryId");

                    b.Navigation("SubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_SubDirectory", "SubDirectory")
                        .WithMany("AuthorizationUserGroup")
                        .HasForeignKey("SubDirectoryId");

                    b.Navigation("SubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_SubDirectory", "SubDirectory")
                        .WithMany("NotificationUser")
                        .HasForeignKey("SubDirectoryId");

                    b.Navigation("SubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbStorage_SubDirectoryNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_SubDirectory", "SubDirectory")
                        .WithMany("NotificationUserGroup")
                        .HasForeignKey("SubDirectoryId");

                    b.Navigation("SubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_File", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_RootDirectory", "RootDirectory")
                        .WithMany("Files")
                        .HasForeignKey("RootDirectoryId");

                    b.HasOne("PSGM.Model.DbStorage.DbStorage_SubDirectory", "SubDirectory")
                        .WithMany("Files")
                        .HasForeignKey("SubDirectoryId");

                    b.Navigation("RootDirectory");

                    b.Navigation("SubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_FileMetadata", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_File", "File")
                        .WithMany("Metadata")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_QrCode", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_File", "File")
                        .WithOne("QrCode")
                        .HasForeignKey("PSGM.Model.DbStorage.DbStorage_QrCode", "FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_SubDirectory", b =>
                {
                    b.HasOne("PSGM.Model.DbStorage.DbStorage_SubDirectory", "ParentSubDirectory")
                        .WithMany("SubDirectories")
                        .HasForeignKey("ParentSubDirectoryId");

                    b.HasOne("PSGM.Model.DbStorage.DbStorage_RootDirectory", "RootDirectory")
                        .WithMany("SubDirectories")
                        .HasForeignKey("RootDirectoryId");

                    b.Navigation("ParentSubDirectory");

                    b.Navigation("RootDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_File", b =>
                {
                    b.Navigation("AuthorizationUserGroups");

                    b.Navigation("AuthorizationUsers");

                    b.Navigation("Metadata");

                    b.Navigation("NotificationUserGroups");

                    b.Navigation("NotificationUsers");

                    b.Navigation("QrCode");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_FileMetadata", b =>
                {
                    b.Navigation("AuthorizationUserGroups");

                    b.Navigation("AuthorizationUsers");

                    b.Navigation("NotificationUserGroups");

                    b.Navigation("NotificationUsers");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_RootDirectory", b =>
                {
                    b.Navigation("AuthorizationUser");

                    b.Navigation("AuthorizationUserGroup");

                    b.Navigation("Files");

                    b.Navigation("NotificationUser");

                    b.Navigation("NotificationUserGroup");

                    b.Navigation("SubDirectories");
                });

            modelBuilder.Entity("PSGM.Model.DbStorage.DbStorage_SubDirectory", b =>
                {
                    b.Navigation("AuthorizationUser");

                    b.Navigation("AuthorizationUserGroup");

                    b.Navigation("Files");

                    b.Navigation("NotificationUser");

                    b.Navigation("NotificationUserGroup");

                    b.Navigation("SubDirectories");
                });
#pragma warning restore 612, 618
        }
    }
}
