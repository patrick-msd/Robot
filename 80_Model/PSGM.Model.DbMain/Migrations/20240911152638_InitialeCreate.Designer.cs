// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSGM.Model.DbMain;

#nullable disable

namespace PSGM.Model.DbMain.Migrations
{
    [DbContext(typeof(DbMain_Context))]
    [Migration("20240911152638_InitialeCreate")]
    partial class InitialeCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryName");

                    b.Property<int>("GpsAltitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GpsAltitude");

                    b.Property<char>("GpsLatitudeCardinalPoint")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeCardinalPoint");

                    b.Property<decimal>("GpsLatitudeDegree")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeDegree");

                    b.Property<decimal>("GpsLatitudeMinute")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeMinute");

                    b.Property<decimal>("GpsLatitudeSecond")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeSecond");

                    b.Property<char>("GpsLongitudeCardinalPoint")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeCardinalPoint");

                    b.Property<decimal>("GpsLongitudeDegree")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeDegree");

                    b.Property<decimal>("GpsLongitudeMinute")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeMinute");

                    b.Property<decimal>("GpsLongitudeSecond")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeSecond");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Line1");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Line2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("PostalCode");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("RegionCode");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("RegionName");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Adderss_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<int>("ContributorType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ContributorType");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Contributors_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("TEXT")
                        .HasColumnName("Finished");

                    b.Property<string>("MachinesExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("MachinesExtString");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Started")
                        .HasColumnType("TEXT")
                        .HasColumnName("Started");

                    b.Property<uint>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Status");

                    b.Property<uint>("WorkflowApplyLevel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WorkflowApplyLevel");

                    b.Property<Guid>("WorkflowIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DocumentType_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("DocumentType_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Location_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExt");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("DocumentObjectName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("DocumentObjectName");

                    b.Property<Guid>("ExternalContactUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ExternalContactUserIdExt");

                    b.Property<Guid>("ExternalContributorsUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ExternalContributorsUserIdExt");

                    b.Property<Guid>("InternalContactUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("InternalContactUserIdExt");

                    b.Property<Guid>("InternalContributorsUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("InternalContributorsUserIdExt");

                    b.Property<string>("LastChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastChanges");

                    b.Property<Guid>("ModifiedByUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExt");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<bool>("OrderIsDirectory")
                        .HasColumnType("INTEGER")
                        .HasColumnName("OrderIsDirectory");

                    b.Property<DateTime>("ProcessingFinishedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("ProcessingFinishedDateTime");

                    b.Property<Guid>("ProcessingFinishedUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ProcessingFinishedUserIdExt");

                    b.Property<DateTime>("ProcessingStartedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("ProcessingStartedDateTime");

                    b.Property<Guid>("ProcessingStartedUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ProcessingStartedUserIdExt");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Status")
                        .HasMaxLength(1023)
                        .HasColumnType("INTEGER")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrderTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExt");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid>("ExternalContactUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ExternalContactUserIdExt");

                    b.Property<Guid>("ExternalContributorsUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ExternalContributorsUserIdExt");

                    b.Property<Guid>("InternalContactUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("InternalContactUserIdExt");

                    b.Property<Guid>("InternalContributorsUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("InternalContributorsUserIdExt");

                    b.Property<string>("LastChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastChanges");

                    b.Property<Guid>("ModifiedByUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExt");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<DateTime>("OderProcessingFinishedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("OderProcessingFinishedDateTime");

                    b.Property<Guid>("OderProcessingFinishedUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("OderProcessingFinishedUserIdExt");

                    b.Property<DateTime>("OderProcessingStartedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("OderProcessingStartedDateTime");

                    b.Property<Guid>("OderProcessingStartedUserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("OderProcessingStartedUserIdExt");

                    b.Property<uint>("OderStatus")
                        .HasMaxLength(1023)
                        .HasColumnType("INTEGER")
                        .HasColumnName("OderStatus");

                    b.Property<string>("OrderDocumentObjectName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("TEXT")
                        .HasColumnName("OrderDocumentObjectName");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderTemplate");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrderTemplate_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrderTemplate_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Order_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Order_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("Acronym");

                    b.Property<string>("DaytimePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("DaytimePhoneNumber");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("TEXT")
                        .HasColumnName("EMail");

                    b.Property<string>("EveningPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("EveningPhoneNumber");

                    b.Property<string>("Homepage")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("TEXT")
                        .HasColumnName("Homepage");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationAuthorization_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationAuthorization_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrganizationAuthorization_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrganizationAuthorization_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationNotification_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationNotification_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrganizationNotification_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Organizationotification_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Organization_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PostDirectory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("BackupsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("BackupsExtString");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<long>("DirectorySize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DirectorySize");

                    b.Property<bool>("DocumentType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DocumentType");

                    b.Property<string>("JobsIdExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("JobsIdExtString");

                    b.Property<string>("LastModificationChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChanges");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Locked");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<long>("Objects")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Objects");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentSubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("TEXT")
                        .HasColumnName("Suffix");

                    b.Property<string>("WorkflowItemsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowItemExtString");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ParentSubDirectoryId");

                    b.ToTable("PostDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PostDirectory_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("PostDirectory_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PreDirectory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("BackupsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("BackupsExtString");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<long>("DirectorySize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DirectorySize");

                    b.Property<bool>("DocumentType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DocumentType");

                    b.Property<string>("JobsIdExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("JobsIdExtString");

                    b.Property<string>("LastModificationChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationChanges");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Locked");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<long>("Objects")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Objects");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentSubDirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("TEXT")
                        .HasColumnName("Suffix");

                    b.Property<string>("WorkflowItemsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowItemExtString");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ParentSubDirectoryId");

                    b.ToTable("PreDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PreDirectory_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("PreDirectory_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("TEXT")
                        .HasColumnName("Finished");

                    b.Property<string>("MachinesExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("MachinesExtString");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Started")
                        .HasColumnType("TEXT")
                        .HasColumnName("Started");

                    b.Property<uint>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Status");

                    b.Property<uint>("WorkflowApplyLevel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WorkflowApplyLevel");

                    b.Property<Guid>("WorkflowIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("WorkflowIdExt");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAuthorization_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAuthorization_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectAuthorization_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectAuthorization_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectNotification_User");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectNotification_UserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectNotification_UserGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectNotification_User_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Project_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Location", "Location")
                        .WithOne("Address")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Address", "LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("Contributors")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("Contributors")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Organization");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DocumentType", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Order", "Order")
                        .WithMany("DocumentTypes")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("Locations")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Organization");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Order", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithOne("Order")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Order", "ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrderTemplate", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Order", "Order")
                        .WithOne("CreatedWithOrderTemplate")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_OrderTemplate", "OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithOne("Organization")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Organization", "ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("AuthorizationUser")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("AuthorizationUserGroup")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("NotificationUser")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("NotificationUserGroup")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PostDirectory", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Order", "Order")
                        .WithMany("PostDirectories")
                        .HasForeignKey("OrderId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_PostDirectory", "ParentSubDirectory")
                        .WithMany("SubDirectories")
                        .HasForeignKey("ParentSubDirectoryId");

                    b.Navigation("Order");

                    b.Navigation("ParentSubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PreDirectory", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Order", "Order")
                        .WithMany("PreDirectories")
                        .HasForeignKey("OrderId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_PreDirectory", "ParentSubDirectory")
                        .WithMany("SubDirectories")
                        .HasForeignKey("ParentSubDirectoryId");

                    b.Navigation("Order");

                    b.Navigation("ParentSubDirectory");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("AuthorizationUser")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("AuthorizationUserGroup")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("NotificationUser")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("NotificationUserGroup")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.Navigation("Address");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Order", b =>
                {
                    b.Navigation("CreatedWithOrderTemplate");

                    b.Navigation("DocumentTypes");

                    b.Navigation("PostDirectories");

                    b.Navigation("PreDirectories");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.Navigation("AuthorizationUser");

                    b.Navigation("AuthorizationUserGroup");

                    b.Navigation("Contributors");

                    b.Navigation("Locations");

                    b.Navigation("NotificationUser");

                    b.Navigation("NotificationUserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PostDirectory", b =>
                {
                    b.Navigation("SubDirectories");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_PreDirectory", b =>
                {
                    b.Navigation("SubDirectories");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project", b =>
                {
                    b.Navigation("AuthorizationUser");

                    b.Navigation("AuthorizationUserGroup");

                    b.Navigation("Contributors");

                    b.Navigation("NotificationUser");

                    b.Navigation("NotificationUserGroup");

                    b.Navigation("Order");

                    b.Navigation("Organization");
                });
#pragma warning restore 612, 618
        }
    }
}
