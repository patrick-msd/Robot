// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PSGM.Model.DbMain;

#nullable disable

namespace PSGM.Model.DbMain.Migrations
{
    [DbContext(typeof(DbMain_Context))]
    partial class DbMain_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("psgm")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AddressLinkId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("CountryName");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<int>("GpsAltitude")
                        .HasColumnType("integer")
                        .HasColumnName("GpsAltitude");

                    b.Property<char>("GpsLatitudeCardinalPoint")
                        .HasColumnType("character(1)")
                        .HasColumnName("GpsLatitudeCardinalPoint");

                    b.Property<decimal>("GpsLatitudeDegree")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeDegree");

                    b.Property<decimal>("GpsLatitudeMinute")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeMinute");

                    b.Property<decimal>("GpsLatitudeSecond")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeSecond");

                    b.Property<char>("GpsLongitudeCardinalPoint")
                        .HasColumnType("character(1)")
                        .HasColumnName("GpsLongitudeCardinalPoint");

                    b.Property<decimal>("GpsLongitudeDegree")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeDegree");

                    b.Property<decimal>("GpsLongitudeMinute")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeMinute");

                    b.Property<decimal>("GpsLongitudeSecond")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeSecond");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Line1");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Line2");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("PostalCode");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("RegionCode");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("RegionName");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.ToTable("Address", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Address_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Archive_Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("JobFinished")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("JobFinished");

                    b.Property<DateTime>("JobStarted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("JobStarted");

                    b.Property<int>("JobType")
                        .HasColumnType("integer")
                        .HasColumnName("JobType");

                    b.Property<Guid>("MachineId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("MachineId_Ext");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Archive_Job", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Archive_Job_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Archive_Job_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Archive_Job_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("ArchiveJobId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ArchiveJobId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UnitId");

                    b.ToTable("Archive_Job_Link", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Archive_Job_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Archive_Job_Link_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("ContributorType")
                        .HasColumnType("integer")
                        .HasColumnName("ContributorType");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contributors", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Contributors_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<bool>("DeliverySlipIsDirectory")
                        .HasColumnType("boolean")
                        .HasColumnName("DeliverySlipIsDirectory");

                    b.Property<int>("DeliverySlipState")
                        .HasMaxLength(1023)
                        .HasColumnType("integer")
                        .HasColumnName("DeliverySlipState");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<string>("DocumentObjectName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)")
                        .HasColumnName("DocumentObjectName");

                    b.Property<Guid>("ExternalContactUserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContactUserId_Ext");

                    b.Property<Guid>("InternalContactUserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContactUserId_Ext");

                    b.Property<string>("Machines_ExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Machines_ExtString");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<int>("NumberOfUnits")
                        .HasColumnType("integer")
                        .HasColumnName("NumberOfUnits");

                    b.Property<DateTime>("ProcessingFinishedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ProcessingFinishedDateTime");

                    b.Property<Guid>("ProcessingFinishedUserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessingFinishedUserId_Ext");

                    b.Property<DateTime>("ProcessingStartedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ProcessingStartedDateTime");

                    b.Property<Guid>("ProcessingStartedUserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessingStartedUserId_Ext");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("DeliverySlip", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("DeliverySlip_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip_Template", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("DeliverySlipDocumentObjectName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)")
                        .HasColumnName("DeliverySlipDocumentObjectName");

                    b.Property<Guid?>("DeliverySlipId")
                        .HasColumnType("uuid");

                    b.Property<int>("DeliverySlipState")
                        .HasMaxLength(1023)
                        .HasColumnType("integer")
                        .HasColumnName("DeliverySlipState");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ExternalContactUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContactUserIdExt");

                    b.Property<Guid>("ExternalContributorsUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContributorsUserIdExt");

                    b.Property<Guid>("InternalContactUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContactUserIdExt");

                    b.Property<Guid>("InternalContributorsUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContributorsUserIdExt");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("OderProcessingFinishedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("OderProcessingFinishedDateTime");

                    b.Property<Guid>("OderProcessingFinishedUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("OderProcessingFinishedUserIdExt");

                    b.Property<DateTime>("OderProcessingStartedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("OderProcessingStartedDateTime");

                    b.Property<Guid>("OderProcessingStartedUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("OderProcessingStartedUserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("DeliverySlipId")
                        .IsUnique();

                    b.ToTable("DeliverySlip_Template", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip_Template_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("DeliverySlip_Template_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Location", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location_Address_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Location_Address_Link", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location_Address_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Location_Address_Link_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Location_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("Acronym");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("DaytimePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DaytimePhoneNumber");

                    b.Property<Guid?>("DeliverySlipExternalId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeliverySlipInternetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)")
                        .HasColumnName("EMail");

                    b.Property<string>("EveningPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("EveningPhoneNumber");

                    b.Property<string>("Homepage")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)")
                        .HasColumnName("Homepage");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeliverySlipExternalId")
                        .IsUnique();

                    b.HasIndex("DeliverySlipInternetId")
                        .IsUnique();

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Organization", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Organization_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("Acronym");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("DaytimePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DaytimePhoneNumber");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)")
                        .HasColumnName("EMail");

                    b.Property<Guid?>("EmployeeGroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("EveningPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("EveningPhoneNumber");

                    b.Property<int>("FieldOfEmployment")
                        .HasColumnType("integer")
                        .HasColumnName("FieldOfEmployment");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeGroupId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Organization_Employee", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_EmployeeGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Organization_EmployeeGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_EmployeeGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Organization_EmployeeGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Organization_Employee_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<bool>("EMail")
                        .HasColumnType("boolean")
                        .HasColumnName("EMail");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Gotify")
                        .HasColumnType("boolean")
                        .HasColumnName("Gotify");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<bool>("SMS")
                        .HasColumnType("boolean")
                        .HasColumnName("SMS");

                    b.Property<bool>("Slack")
                        .HasColumnType("boolean")
                        .HasColumnName("Slack");

                    b.Property<bool>("Teams")
                        .HasColumnType("boolean")
                        .HasColumnName("Teams");

                    b.Property<bool>("Telegram")
                        .HasColumnType("boolean")
                        .HasColumnName("Telegram");

                    b.Property<int>("TriggerState")
                        .HasColumnType("integer")
                        .HasColumnName("TriggerState");

                    b.Property<int>("TriggerType")
                        .HasColumnType("integer")
                        .HasColumnName("TriggerType");

                    b.Property<bool>("WhatsApp")
                        .HasColumnType("boolean")
                        .HasColumnName("WhatsApp");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Organization_Employee_Notification", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_Notification_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Organization_Employee_Notification_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("Addresses")
                        .HasColumnType("integer")
                        .HasColumnName("Addresses");

                    b.Property<int>("Archive")
                        .HasColumnType("integer")
                        .HasColumnName("Archive");

                    b.Property<int>("Contributors")
                        .HasColumnType("integer")
                        .HasColumnName("Contributors");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<int>("DeliverySlip")
                        .HasColumnType("integer")
                        .HasColumnName("DeliverySlip");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("Job")
                        .HasColumnType("integer")
                        .HasColumnName("Job");

                    b.Property<int>("Locations")
                        .HasColumnType("integer")
                        .HasColumnName("Locations");

                    b.Property<int>("Machine")
                        .HasColumnType("integer")
                        .HasColumnName("Machine");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<int>("Organizations")
                        .HasColumnType("integer")
                        .HasColumnName("Organizations");

                    b.Property<int>("Software")
                        .HasColumnType("integer")
                        .HasColumnName("Software");

                    b.Property<int>("Storage")
                        .HasColumnType("integer")
                        .HasColumnName("Storage");

                    b.Property<int>("StorageDirectories")
                        .HasColumnType("integer")
                        .HasColumnName("StorageDirectories");

                    b.Property<int>("StorageFiles")
                        .HasColumnType("integer")
                        .HasColumnName("StorageFiles");

                    b.Property<int>("Units")
                        .HasColumnType("integer")
                        .HasColumnName("Units");

                    b.Property<int>("Workflow")
                        .HasColumnType("integer")
                        .HasColumnName("Workflow");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Organization_Employee_Permission", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_Permission_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Organization_Employee_Permission_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Location_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Organization_Location_Link", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Location_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Organization_Location_Link_Audit", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("AqlAcceptableQualityLevelImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlAcceptableQualityLevelImage");

                    b.Property<int>("AqlAcceptableQualityLevelTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlAcceptableQualityLevelTranscription");

                    b.Property<int>("AqlInspectionLevelImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlInspectionLevelImage");

                    b.Property<int>("AqlInspectionLevelTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlInspectionLevelTranscription");

                    b.Property<int>("AqlQuantityImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlQuantityImage");

                    b.Property<int>("AqlQuantityTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlQuantityTranscription");

                    b.Property<int>("AqlStateImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlStateImage");

                    b.Property<DateTime>("AqlStateLastChangeImage")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AqlStateLastChangeImage");

                    b.Property<DateTime>("AqlStateLastChangeTranscription")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AqlStateLastChangeTranscription");

                    b.Property<int>("AqlStateTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlStateTranscription");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Finished");

                    b.Property<string>("Machines_ExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Machines_ExtString");

                    b.Property<long>("MaxDirectorySize")
                        .HasColumnType("bigint")
                        .HasColumnName("MaxDirectorySize");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Started")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Started");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Project", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Project_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project_Location_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Project_Location_Link", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project_Location_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Project_Location_Link_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("AqlStateImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlStateImage");

                    b.Property<DateTime>("AqlStateLastChangeImage")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AqlStateLastChangeImage");

                    b.Property<DateTime>("AqlStateLastChangeTranscription")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AqlStateLastChangeTranscription");

                    b.Property<int>("AqlStateTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlStateTranscription");

                    b.Property<DateTime>("ArchiveJobFinished")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ArchiveJobFinished");

                    b.Property<DateTime>("ArchiveJobStarted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ArchiveJobStarted");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<Guid?>("DeliverySlipId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<string>("DescriptionProjectOwner")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("DescriptionProjectOwner");

                    b.Property<int>("DetectedDefectsDuringPreparation")
                        .HasColumnType("integer")
                        .HasColumnName("DetectedDefectsDuringPreparation");

                    b.Property<long>("DirectorySizeOnStorage")
                        .HasColumnType("bigint")
                        .HasColumnName("DirectorySizeOnStorage");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean")
                        .HasColumnName("Locked");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<string>("NameProjectOwner")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("NameProjectOwner");

                    b.Property<bool>("NaturalUnit")
                        .HasColumnType("boolean")
                        .HasColumnName("NaturalUnit");

                    b.Property<int>("ObjectsOnStorageInUnit")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectsOnStorageInUnit");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("Order");

                    b.Property<Guid?>("ParentUnitId")
                        .HasColumnType("uuid");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Prefix");

                    b.Property<string>("PrefixProjectOwner")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("PrefixProjectOwner");

                    b.Property<DateTime>("PreparationDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PreparationDateTime");

                    b.Property<Guid>("PreparationUserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("PreparationUserId_Ext");

                    b.Property<int>("Stars")
                        .HasColumnType("integer")
                        .HasColumnName("Stars");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Suffix");

                    b.Property<string>("SuffixProjectOwner")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("SuffixProjectOwner");

                    b.HasKey("Id");

                    b.HasIndex("DeliverySlipId");

                    b.HasIndex("ParentUnitId");

                    b.ToTable("Unit", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Unit_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<Guid?>("DeliverySlipId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeliverySlipId")
                        .IsUnique();

                    b.HasIndex("ProjectId");

                    b.HasIndex("UnitId")
                        .IsUnique();

                    b.ToTable("WorkflowGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("WorkflowGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Configuration");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<int>("WorkflowApplyLevel")
                        .HasColumnType("integer")
                        .HasColumnName("WorkflowApplyLevel");

                    b.Property<int>("WorkflowExecutionLevel")
                        .HasColumnType("integer")
                        .HasColumnName("WorkflowExecutionLevel");

                    b.HasKey("Id");

                    b.ToTable("WorkflowItem", "psgm");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef601faa-1bb5-4171-b907-60a2f1935eee"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Save object (depending on storage configuration in project parameters) to specified S3 storage or filesystem and add the file entity to the database...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Save object to S3 storage or filesystem and add entity to database - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("f03093f8-6ea8-4bee-9875-30d1fc7975f3"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Grab image with specified camera ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Grab image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 10000
                        },
                        new
                        {
                            Id = new Guid("4d7723ce-5bcd-4f82-a921-f9621fa5c383"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Calculate HDR image with OpenCV (mergeMertens) ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Calculate HDR image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("68299067-b79b-4120-98df-13a3e2232c88"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Calculate darktable image according to the sidecar file ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Calculate darktable image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("c33c011d-229a-4c3d-af44-05db3a4c7af4"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Resize image to specified size...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Resize image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("c2dc5eed-f926-4615-882f-c8184c981d93"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Crop image to specified size...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Crop image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("0f10bb0b-f782-4e5b-a53b-c75f7c0403fb"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rotate image ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rotate image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("fd184c53-2e4a-4384-8894-3639eef8ea66"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rotate image ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rotate image - V2.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("38905667-b47b-4d23-b149-c500372f0eff"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sharpen image ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharpen image - V1.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        },
                        new
                        {
                            Id = new Guid("083c3d9a-0915-4506-bf60-b164d19071df"),
                            Configuration = "",
                            CreatedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sharpen image ...",
                            ModifiedByUserId_ExtAutoFill = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDateTimeAutoFill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharpen image - V2.0.0",
                            WorkflowApplyLevel = 10000,
                            WorkflowExecutionLevel = 90000
                        });
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowItem_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("WorkflowItem_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowItem_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("ApplyLevel")
                        .HasColumnType("integer")
                        .HasColumnName("ApplyLevel");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Configuration");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("Order");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("Permissions");

                    b.Property<int>("StorageClass")
                        .HasColumnType("integer")
                        .HasColumnName("StorageClass");

                    b.Property<int>("StorageType")
                        .HasColumnType("integer")
                        .HasColumnName("StorageType");

                    b.Property<int>("WorkflowExecutionLevel")
                        .HasColumnType("integer")
                        .HasColumnName("WorkflowExecutionLevel");

                    b.Property<Guid?>("WorkflowGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WorkflowItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowGroupId");

                    b.HasIndex("WorkflowItemId");

                    b.ToTable("WorkflowItemLink", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowItem_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("WorkflowItemLink_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Archive_Job_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Archive_Job", "ArchiveJob")
                        .WithMany("ArchiveJobLink")
                        .HasForeignKey("ArchiveJobId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("ArchiveJobLink")
                        .HasForeignKey("ProjectId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Unit", "Unit")
                        .WithMany("ArchiveJobLink")
                        .HasForeignKey("UnitId");

                    b.Navigation("ArchiveJob");

                    b.Navigation("Project");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("Contributors")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("Contributors")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Organization");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("DeliverySlips")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip_Template", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliverySlip", "DeliverySlip")
                        .WithOne("CreatedWithDeliverySlipTemplate")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_DeliverySlip_Template", "DeliverySlipId");

                    b.Navigation("DeliverySlip");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location_Address_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Address", "Address")
                        .WithOne("AddressLink")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Location_Address_Link", "AddressId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Location", "Location")
                        .WithOne("AddressLink")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Location_Address_Link", "LocationId");

                    b.Navigation("Address");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliverySlip", "DeliverySlipExternal")
                        .WithOne("ExternalOrganization")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Organization", "DeliverySlipExternalId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliverySlip", "DeliverySlipInternet")
                        .WithOne("InternalOrganization")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Organization", "DeliverySlipInternetId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithOne("Organization")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Organization", "ProjectId");

                    b.Navigation("DeliverySlipExternal");

                    b.Navigation("DeliverySlipInternet");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization_EmployeeGroup", "EmployeeGroup")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeGroupId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("EmployeeGroup");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_EmployeeGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("EmployeeGroups")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_Notification", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization_Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee_Permission", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization_Employee", "Employee")
                        .WithOne("Permissions")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Organization_Employee_Permission", "EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Location_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Location", "Location")
                        .WithMany("OrganizationLocationLink")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("LocationLinks")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Location");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project_Location_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Location", "Location")
                        .WithMany("ProjectLocationLink")
                        .HasForeignKey("LocationId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("LocationLinks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Location");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliverySlip", "DeliverySlip")
                        .WithMany("Units")
                        .HasForeignKey("DeliverySlipId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Unit", "ParentUnit")
                        .WithMany("Unit")
                        .HasForeignKey("ParentUnitId");

                    b.Navigation("DeliverySlip");

                    b.Navigation("ParentUnit");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliverySlip", "DeliverySlip")
                        .WithOne("ApplicableWorkflowGroup")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_WorkflowGroup", "DeliverySlipId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("WorkflowGroups")
                        .HasForeignKey("ProjectId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Unit", "Unit")
                        .WithOne("ApplicableWorkflowGroup")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_WorkflowGroup", "UnitId");

                    b.Navigation("DeliverySlip");

                    b.Navigation("Project");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowItem_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_WorkflowGroup", "WorkflowGroup")
                        .WithMany("WorkflowItem_Links")
                        .HasForeignKey("WorkflowGroupId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_WorkflowItem", "WorkflowItem")
                        .WithMany("WorkflowItemLinks")
                        .HasForeignKey("WorkflowItemId");

                    b.Navigation("WorkflowGroup");

                    b.Navigation("WorkflowItem");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address", b =>
                {
                    b.Navigation("AddressLink");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Archive_Job", b =>
                {
                    b.Navigation("ArchiveJobLink");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliverySlip", b =>
                {
                    b.Navigation("ApplicableWorkflowGroup");

                    b.Navigation("CreatedWithDeliverySlipTemplate");

                    b.Navigation("ExternalOrganization");

                    b.Navigation("InternalOrganization");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.Navigation("AddressLink");

                    b.Navigation("OrganizationLocationLink");

                    b.Navigation("ProjectLocationLink");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.Navigation("Contributors");

                    b.Navigation("EmployeeGroups");

                    b.Navigation("Employees");

                    b.Navigation("LocationLinks");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_Employee", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_EmployeeGroup", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project", b =>
                {
                    b.Navigation("ArchiveJobLink");

                    b.Navigation("Contributors");

                    b.Navigation("DeliverySlips");

                    b.Navigation("LocationLinks");

                    b.Navigation("Organization");

                    b.Navigation("WorkflowGroups");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit", b =>
                {
                    b.Navigation("ApplicableWorkflowGroup");

                    b.Navigation("ArchiveJobLink");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowGroup", b =>
                {
                    b.Navigation("WorkflowItem_Links");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_WorkflowItem", b =>
                {
                    b.Navigation("WorkflowItemLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
