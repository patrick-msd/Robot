// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PSGM.Model.DbMain;

#nullable disable

namespace PSGM.Model.DbMain.Migrations
{
    [DbContext(typeof(DbMain_Context))]
    partial class DbMain_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("psgm")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("CountryName");

                    b.Property<int>("GpsAltitude")
                        .HasColumnType("integer")
                        .HasColumnName("GpsAltitude");

                    b.Property<char>("GpsLatitudeCardinalPoint")
                        .HasColumnType("character(1)")
                        .HasColumnName("GpsLatitudeCardinalPoint");

                    b.Property<decimal>("GpsLatitudeDegree")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeDegree");

                    b.Property<decimal>("GpsLatitudeMinute")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeMinute");

                    b.Property<decimal>("GpsLatitudeSecond")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeSecond");

                    b.Property<char>("GpsLongitudeCardinalPoint")
                        .HasColumnType("character(1)")
                        .HasColumnName("GpsLongitudeCardinalPoint");

                    b.Property<decimal>("GpsLongitudeDegree")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeDegree");

                    b.Property<decimal>("GpsLongitudeMinute")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeMinute");

                    b.Property<decimal>("GpsLongitudeSecond")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeSecond");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Line1");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Line2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("PostalCode");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("RegionCode");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("RegionName");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Address", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Adderss_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("ContributorType")
                        .HasColumnType("integer")
                        .HasColumnName("ContributorType");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contributors", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Contributors_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserIdExt");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<bool>("DeliveryBillIsDirectory")
                        .HasColumnType("boolean")
                        .HasColumnName("DeliveryBillIsDirectory");

                    b.Property<long>("DeliveryBillState")
                        .HasMaxLength(1023)
                        .HasColumnType("bigint")
                        .HasColumnName("DeliveryBillState");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<string>("DocumentObjectName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)")
                        .HasColumnName("DocumentObjectName");

                    b.Property<Guid>("ExternalContactUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContactUserIdExt");

                    b.Property<Guid>("ExternalContributorsUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContributorsUserIdExt");

                    b.Property<Guid>("InternalContactUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContactUserIdExt");

                    b.Property<Guid>("InternalContributorsUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContributorsUserIdExt");

                    b.Property<string>("LastChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("LastChanges");

                    b.Property<Guid>("ModifiedByUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserIdExt");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("ProcessingFinishedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ProcessingFinishedDateTime");

                    b.Property<Guid>("ProcessingFinishedUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessingFinishedUserIdExt");

                    b.Property<DateTime>("ProcessingStartedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ProcessingStartedDateTime");

                    b.Property<Guid>("ProcessingStartedUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessingStartedUserIdExt");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("DeliveryBill", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBillTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserIdExt");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("DeliveryBillDocumentObjectName")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)")
                        .HasColumnName("DeliveryBillDocumentObjectName");

                    b.Property<Guid?>("DeliveryBillId")
                        .HasColumnType("uuid");

                    b.Property<long>("DeliveryBillState")
                        .HasMaxLength(1023)
                        .HasColumnType("bigint")
                        .HasColumnName("DeliveryBillState");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ExternalContactUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContactUserIdExt");

                    b.Property<Guid>("ExternalContributorsUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ExternalContributorsUserIdExt");

                    b.Property<Guid>("InternalContactUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContactUserIdExt");

                    b.Property<Guid>("InternalContributorsUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("InternalContributorsUserIdExt");

                    b.Property<string>("LastChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("LastChanges");

                    b.Property<Guid>("ModifiedByUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserIdExt");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("OderProcessingFinishedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("OderProcessingFinishedDateTime");

                    b.Property<Guid>("OderProcessingFinishedUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("OderProcessingFinishedUserIdExt");

                    b.Property<DateTime>("OderProcessingStartedDateTime")
                        .HasMaxLength(1023)
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("OderProcessingStartedDateTime");

                    b.Property<Guid>("OderProcessingStartedUserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("OderProcessingStartedUserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryBillId")
                        .IsUnique();

                    b.ToTable("DeliveryBillTemplate", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBillTemplate_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("DeliveryBillTemplate_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBill_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("DeliveryBill_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("DeliveryBillId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Finished");

                    b.Property<string>("MachinesExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("MachinesExtString");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Started")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Started");

                    b.Property<long>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("Status");

                    b.Property<long>("WorkflowApplyLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("WorkflowApplyLevel");

                    b.Property<Guid>("WorkflowIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("WorkflowIdExt");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryBillId");

                    b.ToTable("DocumentType", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DocumentType_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("DocumentType_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Location", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Location_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("Acronym");

                    b.Property<string>("DaytimePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DaytimePhoneNumber");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)")
                        .HasColumnName("EMail");

                    b.Property<string>("EveningPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("EveningPhoneNumber");

                    b.Property<string>("Homepage")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)")
                        .HasColumnName("Homepage");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Organization", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationAuthorization_User", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("Permissions");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationAuthorization_UserGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrganizationAuthorization_UserGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrganizationAuthorization_User_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationNotification_User", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationNotification_UserGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("OrganizationNotification_UserGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Organizationotification_User_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Organization_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("AqlAcceptableQualityLevelImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlAcceptableQualityLevelImage");

                    b.Property<int>("AqlAcceptableQualityLevelTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlAcceptableQualityLevelTranscription");

                    b.Property<int>("AqlInspectionLevelImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlInspectionLevelImage");

                    b.Property<int>("AqlInspectionLevelTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlInspectionLevelTranscription");

                    b.Property<int>("AqlQuantityImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlQuantityImage");

                    b.Property<int>("AqlQuantityTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlQuantityTranscription");

                    b.Property<int>("AqlStateImage")
                        .HasColumnType("integer")
                        .HasColumnName("AqlStateImage");

                    b.Property<DateTime>("AqlStateLastChangeImage")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AqlStateLastChangeImage");

                    b.Property<DateTime>("AqlStateLastChangeTranscription")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AqlStateLastChangeTranscription");

                    b.Property<int>("AqlStateTranscription")
                        .HasColumnType("integer")
                        .HasColumnName("AqlStateTranscription");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Finished");

                    b.Property<string>("MachinesExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("MachinesExtString");

                    b.Property<long>("MaxDirectorySize")
                        .HasColumnType("bigint")
                        .HasColumnName("MaxDirectorySize");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Started")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Started");

                    b.Property<long>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("Status");

                    b.Property<long>("WorkflowApplyLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("WorkflowApplyLevel");

                    b.Property<Guid>("WorkflowIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("WorkflowIdExt");

                    b.HasKey("Id");

                    b.ToTable("Project", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAuthorization_User", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("Permissions");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAuthorization_UserGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectAuthorization_UserGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectAuthorization_User_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectNotification_User", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<string>("NotificationString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("NotificationString");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserGroupIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserGroupIdExt");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectNotification_UserGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_UserGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectNotification_UserGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_User_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("ProjectNotification_User_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Project_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("BackupsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("BackupsExtString");

                    b.Property<Guid>("CreatedByUserIdExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserIdExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<Guid?>("DeliveryBillId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("Description");

                    b.Property<long>("DirectorySize")
                        .HasColumnType("bigint")
                        .HasColumnName("DirectorySize");

                    b.Property<bool>("DocumentType")
                        .HasColumnType("boolean")
                        .HasColumnName("DocumentType");

                    b.Property<string>("JobsIdExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("JobsIdExtString");

                    b.Property<string>("LastModificationChanges")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("character varying(8191)")
                        .HasColumnName("LastModificationChanges");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean")
                        .HasColumnName("Locked");

                    b.Property<Guid>("ModifiedByUserIdExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserIdExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<long>("Objects")
                        .HasColumnType("bigint")
                        .HasColumnName("Objects");

                    b.Property<Guid?>("ParentUnitId")
                        .HasColumnType("uuid");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)")
                        .HasColumnName("Suffix");

                    b.Property<string>("WorkflowItemsExtString")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("WorkflowItemExtString");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryBillId");

                    b.HasIndex("ParentUnitId");

                    b.ToTable("Unit", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareIdExt");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserIdExt")
                        .HasColumnType("uuid")
                        .HasColumnName("UserIdExt");

                    b.HasKey("Id");

                    b.ToTable("Unit_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Address", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Location", "Location")
                        .WithOne("Address")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Address", "LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Contributors", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("Contributors")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("Contributors")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Organization");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBill", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithOne("DeliveryBill")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_DeliveryBill", "ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBillTemplate", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliveryBill", "DeliveryBill")
                        .WithOne("CreatedWithDeliveryBillTemplate")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_DeliveryBillTemplate", "DeliveryBillId");

                    b.Navigation("DeliveryBill");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DocumentType", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliveryBill", "DeliveryBill")
                        .WithMany("DocumentTypes")
                        .HasForeignKey("DeliveryBillId");

                    b.Navigation("DeliveryBill");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("Locations")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Organization");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithOne("Organization")
                        .HasForeignKey("PSGM.Model.DbMain.DbMain_Organization", "ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("AuthorizationUser")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("AuthorizationUserGroup")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("NotificationUser")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_OrganizationNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Organization", "Organization")
                        .WithMany("NotificationUserGroup")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("AuthorizationUser")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectAuthorization_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("AuthorizationUserGroup")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_User", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("NotificationUser")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_ProjectNotification_UserGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_Project", "Project")
                        .WithMany("NotificationUserGroup")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit", b =>
                {
                    b.HasOne("PSGM.Model.DbMain.DbMain_DeliveryBill", "DeliveryBill")
                        .WithMany("Units")
                        .HasForeignKey("DeliveryBillId");

                    b.HasOne("PSGM.Model.DbMain.DbMain_Unit", "ParentUnit")
                        .WithMany("Unit")
                        .HasForeignKey("ParentUnitId");

                    b.Navigation("DeliveryBill");

                    b.Navigation("ParentUnit");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_DeliveryBill", b =>
                {
                    b.Navigation("CreatedWithDeliveryBillTemplate");

                    b.Navigation("DocumentTypes");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Location", b =>
                {
                    b.Navigation("Address");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Organization", b =>
                {
                    b.Navigation("AuthorizationUser");

                    b.Navigation("AuthorizationUserGroup");

                    b.Navigation("Contributors");

                    b.Navigation("Locations");

                    b.Navigation("NotificationUser");

                    b.Navigation("NotificationUserGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Project", b =>
                {
                    b.Navigation("AuthorizationUser");

                    b.Navigation("AuthorizationUserGroup");

                    b.Navigation("Contributors");

                    b.Navigation("DeliveryBill");

                    b.Navigation("NotificationUser");

                    b.Navigation("NotificationUserGroup");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PSGM.Model.DbMain.DbMain_Unit", b =>
                {
                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
