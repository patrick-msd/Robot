// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PSGM.Model.DbMachine;

#nullable disable

namespace PSGM.Model.DbMachine.Migrations
{
    [DbContext(typeof(DbMachine_Context))]
    [Migration("20240926205009_InitialeCreate")]
    partial class InitialeCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("psgm")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("CountryName");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<int>("GpsAltitude")
                        .HasColumnType("integer")
                        .HasColumnName("GpsAltitude");

                    b.Property<char>("GpsLatitudeCardinalPoint")
                        .HasColumnType("character(1)")
                        .HasColumnName("GpsLatitudeCardinalPoint");

                    b.Property<decimal>("GpsLatitudeDegree")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeDegree");

                    b.Property<decimal>("GpsLatitudeMinute")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeMinute");

                    b.Property<decimal>("GpsLatitudeSecond")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLatitudeSecond");

                    b.Property<char>("GpsLongitudeCardinalPoint")
                        .HasColumnType("character(1)")
                        .HasColumnName("GpsLongitudeCardinalPoint");

                    b.Property<decimal>("GpsLongitudeDegree")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeDegree");

                    b.Property<decimal>("GpsLongitudeMinute")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeMinute");

                    b.Property<decimal>("GpsLongitudeSecond")
                        .HasColumnType("numeric")
                        .HasColumnName("GpsLongitudeSecond");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Line1");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Line2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("PostalCode");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("RegionCode");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("RegionName");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Address", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Address_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Address_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AttachmentsString")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("AttachmentsString");

                    b.Property<bool>("AutoStartAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("AutoStartAtSplashScreen");

                    b.Property<string>("ConfigurationString")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("ConfigurationString");

                    b.Property<bool>("ConnectAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("ConnectAtSplashScreen");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<int>("DeviceCategory")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceCategory");

                    b.Property<string>("DeviceDescription")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("character varying(8192)")
                        .HasColumnName("DeviceDescription");

                    b.Property<Guid?>("DeviceGroupId")
                        .HasColumnType("uuid");

                    b.Property<int>("DeviceLocation")
                        .HasMaxLength(1024)
                        .HasColumnType("integer")
                        .HasColumnName("DeviceLocation");

                    b.Property<int>("DeviceManufacturer")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceManufacturer");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("DeviceName");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceType");

                    b.Property<string>("DeviceUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("DeviceUrl");

                    b.Property<bool>("HomingAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("HomingAtSplashScreen");

                    b.Property<bool>("InitializeAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("InitializeAtSplashScreen");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("SerialNumber");

                    b.HasKey("Id");

                    b.HasIndex("DeviceGroupId");

                    b.ToTable("Device", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Configuration");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("character varying(8192)")
                        .HasColumnName("Description");

                    b.Property<int>("DeviceGroupeType")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceGroupeType");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Location");

                    b.Property<Guid?>("MachineId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("DeviceGroup", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("DeviceGroup_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Device_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Configuration");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("character varying(8192)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Name");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("SerialNumber");

                    b.Property<int>("Timeout")
                        .HasColumnType("integer")
                        .HasColumnName("Timeout");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Interface_Can", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_CanDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<bool>("AutoStartAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("AutoStartAtSplashScreen");

                    b.Property<long>("CanDeviceId")
                        .HasColumnType("bigint")
                        .HasColumnName("CanDeviceId");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Configuration");

                    b.Property<bool>("ConnectAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("ConnectAtSplashScreen");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<int>("DeviceCategory")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceCategory");

                    b.Property<string>("DeviceDescription")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("character varying(8192)")
                        .HasColumnName("DeviceDescription");

                    b.Property<int>("DeviceLocation")
                        .HasMaxLength(1024)
                        .HasColumnType("integer")
                        .HasColumnName("DeviceLocation");

                    b.Property<int>("DeviceManufacturer")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceManufacturer");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("DeviceName");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer")
                        .HasColumnName("DeviceType");

                    b.Property<string>("DeviceUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("DeviceUrl");

                    b.Property<bool>("HomingAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("HomingAtSplashScreen");

                    b.Property<bool>("InitializeAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("InitializeAtSplashScreen");

                    b.Property<Guid?>("Interface_CanId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("SerialNumber");

                    b.Property<int>("Timeout")
                        .HasColumnType("integer")
                        .HasColumnName("Timeout");

                    b.HasKey("Id");

                    b.HasIndex("Interface_CanId");

                    b.ToTable("Interface_CanDevice", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_CanDevice_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Interface_CanDevice_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Interface_Can_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("IpAddress");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<int>("Port")
                        .HasColumnType("integer")
                        .HasColumnName("Port");

                    b.Property<int>("Timeout")
                        .HasColumnType("integer")
                        .HasColumnName("Timeout");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Interface_Ethernet", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Interface_Ethernet_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Serial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("BaudRate")
                        .HasColumnType("integer")
                        .HasColumnName("BaudRate");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<byte>("Handshake")
                        .HasColumnType("smallint")
                        .HasColumnName("Handshake");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<int>("MonitoringInterval")
                        .HasColumnType("integer")
                        .HasColumnName("MonitoringInterval");

                    b.Property<byte>("Parity")
                        .HasColumnType("smallint")
                        .HasColumnName("Parity");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("PortName");

                    b.Property<int>("ReadTimeout")
                        .HasColumnType("integer")
                        .HasColumnName("ReadTimeout");

                    b.Property<int>("SerialPortRetrySending")
                        .HasColumnType("integer")
                        .HasColumnName("SerialPortRetrySending");

                    b.Property<byte>("StopBits")
                        .HasColumnType("smallint")
                        .HasColumnName("StopBits");

                    b.Property<int>("WriteTimeout")
                        .HasColumnType("integer")
                        .HasColumnName("WriteTimeout");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Interface_Serial", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Serial_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Interface_Serial_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)")
                        .HasColumnName("Description");

                    b.Property<int>("LocationType")
                        .HasColumnType("integer")
                        .HasColumnName("LocationType");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Location", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location_Address_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Location_Address_Link", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location_Address_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Location_Address_Link_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Location_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("ApplicationName");

                    b.Property<bool>("AutoStartAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("AutoStartAtSplashScreen");

                    b.Property<bool>("ConnectAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("ConnectAtSplashScreen");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("character varying(8192)")
                        .HasColumnName("Description");

                    b.Property<bool>("HomingAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("HomingAtSplashScreen");

                    b.Property<bool>("InitializeAtSplashScreen")
                        .HasColumnType("boolean")
                        .HasColumnName("InitializeAtSplashScreen");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Name");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Machine", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Machine_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine_Location_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MachineId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MachineId");

                    b.ToTable("Machine_Location_Link", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine_Location_Link_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Machine_Location_Link_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId_ExtAutoFill");

                    b.Property<DateTime>("CreatedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTimeAutoFill");

                    b.Property<Guid>("ModifiedByUserId_ExtAutoFill")
                        .HasColumnType("uuid")
                        .HasColumnName("ModifiedByUserId_ExtAutoFill");

                    b.Property<DateTime>("ModifiedDateTimeAutoFill")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedDateTimeAutoFill");

                    b.Property<Guid>("ProjectId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("ProjectId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Project", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Project_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("character varying(16383)")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SoftwareId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("SoftwareId_Ext");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceId");

                    b.Property<Guid>("UserId_Ext")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId_Ext");

                    b.HasKey("Id");

                    b.ToTable("Project_AuditLog", "psgm");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Address", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_DeviceGroup", "DeviceGroup")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceGroupId");

                    b.Navigation("DeviceGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Machine", "Machine")
                        .WithMany("DeviceGroups")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Device", "Device")
                        .WithOne("Interfaces_Can")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Interface_Can", "DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_CanDevice", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Interface_Can", "Interface_Can")
                        .WithMany("Interface_CanDevices")
                        .HasForeignKey("Interface_CanId");

                    b.Navigation("Interface_Can");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Device", "Device")
                        .WithOne("Interfaces_Ethernet")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet", "DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Serial", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Device", "Device")
                        .WithOne("Interfaces_Serial")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Interface_Serial", "DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location_Address_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Location", "Location")
                        .WithOne("AddressLink")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Location_Address_Link", "LocationId");

                    b.Navigation("Address");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Project", "Project")
                        .WithMany("Machines")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine_Location_Link", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Location", "Location")
                        .WithMany("MachineLocationLink")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Machine", "Machine")
                        .WithMany("LocationLinks")
                        .HasForeignKey("MachineId");

                    b.Navigation("Location");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device", b =>
                {
                    b.Navigation("Interfaces_Can");

                    b.Navigation("Interfaces_Ethernet");

                    b.Navigation("Interfaces_Serial");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can", b =>
                {
                    b.Navigation("Interface_CanDevices");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location", b =>
                {
                    b.Navigation("AddressLink");

                    b.Navigation("MachineLocationLink");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine", b =>
                {
                    b.Navigation("DeviceGroups");

                    b.Navigation("LocationLinks");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Project", b =>
                {
                    b.Navigation("Machines");
                });
#pragma warning restore 612, 618
        }
    }
}
