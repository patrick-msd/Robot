// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSGM.Model.DbMachine;

#nullable disable

namespace PSGM.Model.DbMachine.Migrations
{
    [DbContext(typeof(DbMachine_Context))]
    [Migration("20240901150712_InitialeCreate")]
    partial class InitialeCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryName");

                    b.Property<int>("GpsAltitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GpsAltitude");

                    b.Property<char>("GpsLatitudeCardinalPoint")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeCardinalPoint");

                    b.Property<decimal>("GpsLatitudeDegree")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeDegree");

                    b.Property<decimal>("GpsLatitudeMinute")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeMinute");

                    b.Property<decimal>("GpsLatitudeSecond")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLatitudeSecond");

                    b.Property<char>("GpsLongitudeCardinalPoint")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeCardinalPoint");

                    b.Property<decimal>("GpsLongitudeDegree")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeDegree");

                    b.Property<decimal>("GpsLongitudeMinute")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeMinute");

                    b.Property<decimal>("GpsLongitudeSecond")
                        .HasColumnType("TEXT")
                        .HasColumnName("GpsLongitudeSecond");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Line1");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Line2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("PostalCode");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("RegionCode");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("RegionName");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Address_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Adderss_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("AttachmentsString")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("TEXT")
                        .HasColumnName("AttachmentsString");

                    b.Property<bool>("AutoStartAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AutoStartAtSplashscreen");

                    b.Property<string>("ConfigurationString")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("TEXT")
                        .HasColumnName("ConfigurationString");

                    b.Property<bool>("ConnectAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ConnectAtSplashscreen");

                    b.Property<uint>("DeviceCategory")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceCategory");

                    b.Property<string>("DeviceDescription")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceDescription");

                    b.Property<Guid?>("DeviceGroupId")
                        .HasColumnType("TEXT");

                    b.Property<uint>("DeviceLocation")
                        .HasMaxLength(1024)
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceLocation");

                    b.Property<uint>("DeviceManufacturer")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceManufacturer");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceName");

                    b.Property<uint>("DeviceType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceType");

                    b.Property<string>("DeviceUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceUrl");

                    b.Property<bool>("HomingAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("HomingAtSplashscreen");

                    b.Property<bool>("InitializeAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("InitializeAtSplashscreen");

                    b.Property<string>("Serialnumber")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Serialnumber");

                    b.HasKey("Id");

                    b.HasIndex("DeviceGroupId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("TEXT")
                        .HasColumnName("Configuration");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<uint>("DeviceGroupeType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceGroupeType");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Location");

                    b.Property<Guid?>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("DeviceGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("DeviceGroup_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Device_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("TEXT")
                        .HasColumnName("Configuration");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Serialnumber")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Serialnumber");

                    b.Property<int>("Timeout")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Timeout");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Interface_Can");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_CanDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<bool>("AutoStartAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AutoStartAtSplashscreen");

                    b.Property<uint>("CanDeviceId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CanDeviceId");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("TEXT")
                        .HasColumnName("Configuration");

                    b.Property<bool>("ConnectAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ConnectAtSplashscreen");

                    b.Property<uint>("DeviceCategory")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceCategory");

                    b.Property<string>("DeviceDescription")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceDescription");

                    b.Property<uint>("DeviceLocation")
                        .HasMaxLength(1024)
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceLocation");

                    b.Property<uint>("DeviceManufacturer")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceManufacturer");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceName");

                    b.Property<uint>("DeviceType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeviceType");

                    b.Property<string>("DeviceUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT")
                        .HasColumnName("DeviceUrl");

                    b.Property<bool>("HomingAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("HomingAtSplashscreen");

                    b.Property<bool>("InitialzeAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("InitialzeAtSplashscreen");

                    b.Property<Guid?>("Interface_CanId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Serialnumber")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Serialnumber");

                    b.Property<int>("Timeout")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Timeout");

                    b.HasKey("Id");

                    b.HasIndex("Interface_CanId");

                    b.ToTable("Interface_CanDevice");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_CanDevice_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Interface_CanDevice_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Interface_Can_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("IpAddress");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Port");

                    b.Property<int>("Timeout")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Timeout");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Interface_Ethernet");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Interface_Ethernet_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Serial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<int>("BaudRate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BaudRate");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Handshake")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Handshake");

                    b.Property<int>("MonitoringInterval")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MonitoringInterval");

                    b.Property<byte>("Parity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Parity");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT")
                        .HasColumnName("PortName");

                    b.Property<int>("ReadTimeout")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ReadTimeout");

                    b.Property<int>("SerialPortRetrySending")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SerialPortRetrySending");

                    b.Property<byte>("StopBits")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StopBits");

                    b.Property<int>("WriteTimeout")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WriteTimeout");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Interface_Serial");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Serial_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Interface_Serial_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<Guid?>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("MachineId")
                        .IsUnique();

                    b.ToTable("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Location_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("ApplicationName");

                    b.Property<bool>("AutoStartAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AutoStartAtSplashscreen");

                    b.Property<bool>("ConnectAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ConnectAtSplashscreen");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8191)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<bool>("HomingAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("HomingAtSplashscreen");

                    b.Property<bool>("InitialzeAtSplashscreen")
                        .HasColumnType("INTEGER")
                        .HasColumnName("InitialzeAtSplashscreen");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine_AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Action");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasMaxLength(16383)
                        .HasColumnType("TEXT")
                        .HasColumnName("Changes");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateTime");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.ToTable("Machine_AuditLog");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Address", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Location", "Location")
                        .WithOne("Address")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Address", "LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_DeviceGroup", "DeviceGroup")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceGroupId");

                    b.Navigation("DeviceGroup");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Machine", "Machine")
                        .WithMany("DeviceGroups")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Device", "Device")
                        .WithOne("Interfaces_Can")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Interface_Can", "DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_CanDevice", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Interface_Can", "Interface_Can")
                        .WithMany("Interface_CanDevices")
                        .HasForeignKey("Interface_CanId");

                    b.Navigation("Interface_Can");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Device", "Device")
                        .WithOne("Interfaces_Ethernet")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Interface_Ethernet", "DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Serial", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Device", "Device")
                        .WithOne("Interfaces_Serial")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Interface_Serial", "DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location", b =>
                {
                    b.HasOne("PSGM.Model.DbMachine.DbMachine_Machine", "Machine")
                        .WithOne("Location")
                        .HasForeignKey("PSGM.Model.DbMachine.DbMachine_Location", "MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Device", b =>
                {
                    b.Navigation("Interfaces_Can");

                    b.Navigation("Interfaces_Ethernet");

                    b.Navigation("Interfaces_Serial");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_DeviceGroup", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Interface_Can", b =>
                {
                    b.Navigation("Interface_CanDevices");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Location", b =>
                {
                    b.Navigation("Address");
                });

            modelBuilder.Entity("PSGM.Model.DbMachine.DbMachine_Machine", b =>
                {
                    b.Navigation("DeviceGroups");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
