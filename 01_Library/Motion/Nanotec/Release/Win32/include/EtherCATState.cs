//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace  Nlc {

public class EtherCATState : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal EtherCATState(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(EtherCATState obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~EtherCATState() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NanolibPINVOKE.delete_EtherCATState(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string NONE {
    get {
      string ret = NanolibPINVOKE.EtherCATState_NONE_get(swigCPtr);
      return ret;
    } 
  }

  public string INIT {
    get {
      string ret = NanolibPINVOKE.EtherCATState_INIT_get(swigCPtr);
      return ret;
    } 
  }

  public string PRE_OPERATIONAL {
    get {
      string ret = NanolibPINVOKE.EtherCATState_PRE_OPERATIONAL_get(swigCPtr);
      return ret;
    } 
  }

  public string BOOT {
    get {
      string ret = NanolibPINVOKE.EtherCATState_BOOT_get(swigCPtr);
      return ret;
    } 
  }

  public string SAFE_OPERATIONAL {
    get {
      string ret = NanolibPINVOKE.EtherCATState_SAFE_OPERATIONAL_get(swigCPtr);
      return ret;
    } 
  }

  public string OPERATIONAL {
    get {
      string ret = NanolibPINVOKE.EtherCATState_OPERATIONAL_get(swigCPtr);
      return ret;
    } 
  }

  public EtherCATState() : this(NanolibPINVOKE.new_EtherCATState(), true) {
  }

}

}
