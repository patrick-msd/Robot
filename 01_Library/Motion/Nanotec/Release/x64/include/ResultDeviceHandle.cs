//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace  Nlc {

public class ResultDeviceHandle : Result {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ResultDeviceHandle(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NanolibPINVOKE.ResultDeviceHandle_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ResultDeviceHandle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NanolibPINVOKE.delete_ResultDeviceHandle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ResultDeviceHandle( Nlc.DeviceHandle  result_) : this(NanolibPINVOKE.new_ResultDeviceHandle__SWIG_0( ref result_ ), true) {
  }

  public ResultDeviceHandle(string errorString_) : this(NanolibPINVOKE.new_ResultDeviceHandle__SWIG_1(errorString_), true) {
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ResultDeviceHandle(NlcErrorCode errCode, string errorString_) : this(NanolibPINVOKE.new_ResultDeviceHandle__SWIG_2((int)errCode, errorString_), true) {
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ResultDeviceHandle(NlcErrorCode errCode, uint exErrCode, string errorString_) : this(NanolibPINVOKE.new_ResultDeviceHandle__SWIG_3((int)errCode, exErrCode, errorString_), true) {
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ResultDeviceHandle(Result result) : this(NanolibPINVOKE.new_ResultDeviceHandle__SWIG_4(Result.getCPtr(result)), true) {
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
  }

  public  Nlc.DeviceHandle  getResult() {
			Nlc.DeviceHandle ret = NanolibPINVOKE.ResultDeviceHandle_getResult(swigCPtr);
			return ret;
		}

}

}
