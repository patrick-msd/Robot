//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace  Nlc {

public class Nanolib {
  public static int NANOTEC_VENDOR_ID {
    get {
      int ret = NanolibPINVOKE.NANOTEC_VENDOR_ID_get();
      return ret;
    } 
  }

  public static CanOpenNmtState canOpenNmtState {
    get {
      global::System.IntPtr cPtr = NanolibPINVOKE.canOpenNmtState_get();
      CanOpenNmtState ret = (cPtr == global::System.IntPtr.Zero) ? null : new CanOpenNmtState(cPtr, false);
      return ret;
    } 
  }

  public static CanOpenNmtService canOpenNmtService {
    get {
      global::System.IntPtr cPtr = NanolibPINVOKE.canOpenNmtService_get();
      CanOpenNmtService ret = (cPtr == global::System.IntPtr.Zero) ? null : new CanOpenNmtService(cPtr, false);
      return ret;
    } 
  }

  public static EtherCATState EtherCATStates {
    get {
      global::System.IntPtr cPtr = NanolibPINVOKE.EtherCATStates_get();
      EtherCATState ret = (cPtr == global::System.IntPtr.Zero) ? null : new EtherCATState(cPtr, false);
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_CANOPEN {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_CANOPEN_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_IXXAT {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_IXXAT_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_ZK_USB_CAN {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_ZK_USB_CAN_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_MODBUS_RTU {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_MODBUS_RTU_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_SERIAL_PORT {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_SERIAL_PORT_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_MODBUS_VCP {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_MODBUS_VCP_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_MSC {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_MSC_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_NANOTEC_VCP {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_NANOTEC_VCP_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_USB_BUS {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_USB_BUS_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_MODBUS_TCP {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_MODBUS_TCP_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_NETWORK {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_NETWORK_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_RESTFULL_API {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_RESTFULL_API_get();
      return ret;
    } 
  }

  public static string BUS_HARDWARE_ID_PROTOCOL_ETHERCAT {
    get {
      string ret = NanolibPINVOKE.BUS_HARDWARE_ID_PROTOCOL_ETHERCAT_get();
      return ret;
    } 
  }

  public static BusHwOptionsDefault busHwOptionsDefaults {
    get {
      global::System.IntPtr cPtr = NanolibPINVOKE.busHwOptionsDefaults_get();
      BusHwOptionsDefault ret = (cPtr == global::System.IntPtr.Zero) ? null : new BusHwOptionsDefault(cPtr, false);
      return ret;
    } 
  }

  public static NanoLibAccessor getNanoLibAccessor() {
    global::System.IntPtr cPtr = NanolibPINVOKE.getNanoLibAccessor();
    NanoLibAccessor ret = (cPtr == global::System.IntPtr.Zero) ? null : new NanoLibAccessor(cPtr, false);
    return ret;
  }

}

}
