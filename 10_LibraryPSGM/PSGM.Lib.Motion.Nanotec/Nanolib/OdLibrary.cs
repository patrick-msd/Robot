//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace  Nlc {

public class OdLibrary : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal OdLibrary(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(OdLibrary obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~OdLibrary() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NanolibPINVOKE.delete_OdLibrary(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual uint getObjectDictionaryCount() {
    uint ret = NanolibPINVOKE.OdLibrary_getObjectDictionaryCount(swigCPtr);
    return ret;
  }

  public virtual ResultObjectDictionary getObjectDictionary(uint odIndex) {
    ResultObjectDictionary ret = new ResultObjectDictionary(NanolibPINVOKE.OdLibrary_getObjectDictionary(swigCPtr, odIndex), true);
    return ret;
  }

  public virtual ResultObjectDictionary addObjectDictionaryFromFile(string absoluteXmlFilePath) {
    ResultObjectDictionary ret = new ResultObjectDictionary(NanolibPINVOKE.OdLibrary_addObjectDictionaryFromFile(swigCPtr, absoluteXmlFilePath), true);
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual ResultObjectDictionary addObjectDictionary(ByteVector odXmlData, string xmlFilePath) {
    ResultObjectDictionary ret = new ResultObjectDictionary(NanolibPINVOKE.OdLibrary_addObjectDictionary__SWIG_0(swigCPtr, ByteVector.getCPtr(odXmlData), xmlFilePath), true);
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual ResultObjectDictionary addObjectDictionary(ByteVector odXmlData) {
    ResultObjectDictionary ret = new ResultObjectDictionary(NanolibPINVOKE.OdLibrary_addObjectDictionary__SWIG_1(swigCPtr, ByteVector.getCPtr(odXmlData)), true);
    if (NanolibPINVOKE.SWIGPendingException.Pending) throw NanolibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
